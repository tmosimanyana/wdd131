// ===== PORTFOLIO WEBSITE JAVASCRIPT =====

// ===== GLOBAL VARIABLES =====
const state = {
  isMenuOpen: false,
  hasAnimated: false,
  observers: new Map()
};

// ===== DOM ELEMENTS =====
const DOM = {
  navToggle: null,
  navMenu: null,
  currentYear: null,
  lastModified: null,
  statNumbers: null,
  contactForm: null,
  cards: null
};

// ===== UTILITY FUNCTIONS =====
const utils = {
  // Throttle function for performance
  throttle(func, delay) {
    let timeoutId;
    let lastExecTime = 0;
    return function (...args) {
      const currentTime = Date.now();
      
      if (currentTime - lastExecTime > delay) {
        func.apply(this, args);
        lastExecTime = currentTime;
      } else {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() => {
          func.apply(this, args);
          lastExecTime = Date.now();
        }, delay - (currentTime - lastExecTime));
      }
    };
  },

  // Debounce function for performance
  debounce(func, delay) {
    let timeoutId;
    return function (...args) {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => func.apply(this, args), delay);
    };
  },

  // Check if element is in viewport
  isInViewport(element) {
    const rect = element.getBoundingClientRect();
    return (
      rect.top >= 0 &&
      rect.left >= 0 &&
      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
      rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
  },

  // Smooth scroll to element
  smoothScrollTo(element) {
    if (element) {
      element.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    }
  },

  // Add CSS class with animation support
  addClassWithAnimation(element, className, delay = 0) {
    setTimeout(() => {
      element.classList.add(className);
    }, delay);
  },

  // Format number with commas
  formatNumber(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  },

  // Validate email
  isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }
};

// ===== INITIALIZATION =====
function initializeApp() {
  try {
    cacheDOMElements();
    setupEventListeners();
    initializeComponents();
    console.log('✅ Portfolio website initialized successfully');
  } catch (error) {
    console.error('❌ Error initializing portfolio:', error);
  }
}

function cacheDOMElements() {
  DOM.navToggle = document.querySelector('.nav-toggle');
  DOM.navMenu = document.querySelector('.nav-menu');
  DOM.currentYear = document.getElementById('current-year');
  DOM.lastModified = document.getElementById('last-modified');
  DOM.statNumbers = document.querySelectorAll('.stat-number');
  DOM.contactForm = document.getElementById('contact-form');
  DOM.cards = document.querySelectorAll('.card');
}

function setupEventListeners() {
  // Navigation toggle
  if (DOM.navToggle) {
    DOM.navToggle.addEventListener('click', toggleMobileMenu);
  }

  // Mobile menu close on link click
  if (DOM.navMenu) {
    DOM.navMenu.addEventListener('click', (e) => {
      if (e.target.tagName === 'A') {
        closeMobileMenu();
      }
    });
  }

  // Contact form submission
  if (DOM.contactForm) {
    DOM.contactForm.addEventListener('submit', handleContactForm);
  }

  // Smooth scrolling for anchor links
  document.addEventListener('click', handleAnchorClicks);

  // Window events
  window.addEventListener('scroll', utils.throttle(handleScroll, 16));
  window.addEventListener('resize', utils.debounce(handleResize, 250));
  window.addEventListener('load', handlePageLoad);

  // Keyboard accessibility
  document.addEventListener('keydown', handleKeyboardNav);

  // Close mobile menu on outside click
  document.addEventListener('click', (e) => {
    if (state.isMenuOpen && !DOM.navMenu.contains(e.target) && !DOM.navToggle.contains(e.target)) {
      closeMobileMenu();
    }
  });
}

function initializeComponents() {
  updateCurrentYear();
  updateLastModified();
  initializeIntersectionObserver();
  initializeScrollAnimations();
  preloadImages();
}

// ===== NAVIGATION FUNCTIONS =====
function toggleMobileMenu() {
  state.isMenuOpen = !state.isMenuOpen;
  
  if (state.isMenuOpen) {
    openMobileMenu();
  } else {
    closeMobileMenu();
  }
}

function openMobileMenu() {
  DOM.navMenu?.classList.add('active');
  DOM.navToggle?.classList.add('active');
  document.body.style.overflow = 'hidden';
  
  // Animate hamburger menu
  if (DOM.navToggle) {
    const spans = DOM.navToggle.querySelectorAll('span');
    spans[0].style.transform = 'rotate(45deg) translate(5px, 5px)';
    spans[1].style.opacity = '0';
    spans[2].style.transform = 'rotate(-45deg) translate(7px, -6px)';
  }
}

function closeMobileMenu() {
  state.isMenuOpen = false;
  DOM.navMenu?.classList.remove('active');
  DOM.navToggle?.classList.remove('active');
  document.body.style.overflow = '';
  
  // Reset hamburger menu
  if (DOM.navToggle) {
    const spans = DOM.navToggle.querySelectorAll('span');
    spans.forEach(span => {
      span.style.transform = '';
      span.style.opacity = '';
    });
  }
}

// ===== SCROLL FUNCTIONS =====
function handleScroll() {
  const scrollY = window.scrollY;
  
  // Header transparency effect
  const header = document.querySelector('header');
  if (header) {
    const opacity = Math.min(scrollY / 100, 1);
    header.style.background = `rgba(255, 255, 255, ${0.1 + opacity * 0.1})`;
  }

  // Parallax effect for background circles
  const bgCircles = document.querySelectorAll('.bg-circle');
  bgCircles.forEach((circle, index) => {
    const speed = (index + 1) * 0.5;
    const yPos = -(scrollY * speed);
    circle.style.transform = `translateY(${yPos}px)`;
  });

  // Show/hide scroll indicator
  const scrollIndicator = document.querySelector('.scroll-indicator');
  if (scrollIndicator) {
    const opacity = Math.max(1 - scrollY / 300, 0);
    scrollIndicator.style.opacity = opacity;
  }
}

// ===== ANIMATION FUNCTIONS =====
function initializeIntersectionObserver() {
  const observerOptions = {
    root: null,
    rootMargin: '0px 0px -100px 0px',
    threshold: 0.1
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-in');
        
        // Trigger stat counter animation
        if (entry.target.classList.contains('stats-container')) {
          animateStatCounters();
        }
        
        // Stagger card animations
        if (entry.target.classList.contains('card')) {
          const delay = Array.from(DOM.cards).indexOf(entry.target) * 100;
          setTimeout(() => {
            entry.target.style.animationDelay = '0s';
            entry.target.classList.add('fade-in-up');
          }, delay);
        }
      }
    });
  }, observerOptions);

  // Observe elements
  const elementsToObserve = document.querySelectorAll('.card, .hero, .stats-container');
  elementsToObserve.forEach(el => observer.observe(el));
  
  state.observers.set('main', observer);
}

function initializeScrollAnimations() {
  // Add CSS classes for animations
  const style = document.createElement('style');
  style.textContent = `
    .animate-in {
      animation: fadeInUp 0.8s ease-out both;
    }
    
    .fade-in-up {
      animation: fadeInUp 0.6s ease-out both;
    }
  `;
  document.head.appendChild(style);
}

function animateStatCounters() {
  if (state.hasAnimated) return;
  state.hasAnimated = true;

  DOM.statNumbers.forEach(stat => {
    const target = parseInt(stat.getAttribute('data-target'));
    const increment = target / 100;
    let current = 0;

    const updateCounter = () => {
      if (current < target) {
        current += increment;
        stat.textContent = Math.ceil(current);
        requestAnimationFrame(updateCounter);
      } else {
        stat.textContent = target + (stat.textContent.includes('%') ? '%' : '');
      }
    };

    updateCounter();
  });
}

// ===== FORM HANDLING =====
function handleContactForm(e) {
  e.preventDefault();
  
  const formData = new FormData(e.target);
  const name = formData.get('name')?.trim();
  const email = formData.get('email')?.trim();
  const message = formData.get('message')?.trim();
  
  // Validation
  if (!name || !email || !message) {
    showNotification('Please fill in all fields.', 'error');
    return;
  }
  
  if (!utils.isValidEmail(email)) {
    showNotification('Please enter a valid email address.', 'error');
    return;
  }
  
  // Simulate form submission
  const submitButton = e.target.querySelector('button[type="submit"]');
  const originalText = submitButton.textContent;
  
  submitButton.textContent = 'Sending...';
  submitButton.disabled = true;
  
  setTimeout(() => {
    showNotification('Thank you! Your message has been sent.', 'success');
    e.target.reset();
    submitButton.textContent = originalText;
    submitButton.disabled = false;
  }, 2000);
}

function showNotification(message, type = 'info') {
  // Remove existing notifications
  const existingNotification = document.querySelector('.notification');
  if (existingNotification) {
    existingNotification.remove();
  }
  
  const notification = document.createElement('div');
  notification.className = `notification notification-${type}`;
  notification.textContent = message;
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    color: white;
    font-weight: 600;
    z-index: 10000;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    max-width: 300px;
    word-wrap: break-word;
    ${type === 'success' ? 'background: #10b981;' : ''}
    ${type === 'error' ? 'background: #ef4444;' : ''}
    ${type === 'info' ? 'background: #3b82f6;' : ''}
  `;
  
  document.body.appendChild(notification);
  
  // Animate in
  setTimeout(() => {
    notification.style.transform = 'translateX(0)';
  }, 100);
  
  // Auto remove
  setTimeout(() => {
    notification.style.transform = 'translateX(100%)';
    setTimeout(() => notification.remove(), 300);
  }, 5000);
}

// ===== EVENT HANDLERS =====
function handleAnchorClicks(e) {
  const link = e.target.closest('a[href^="#"]');
  if (!link) return;
  
  e.preventDefault();
  const targetId = link.getAttribute('href').substring(1);
  const targetElement = document.getElementById(targetId);
  
  if (targetElement) {
    utils.smoothScrollTo(targetElement);
    closeMobileMenu();
  }
}

function handleResize() {
  // Close mobile menu on desktop
  if (window.innerWidth > 768 && state.isMenuOpen) {
    closeMobileMenu();
  }
  
  // Reset any viewport-dependent calculations
  const vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', `${vh}px`);
}

function handlePageLoad() {
  // Remove loading states
  document.body.classList.add('loaded');
  
  // Initialize any page-specific functionality
  const currentPage = window.location.pathname.split('/').pop() || 'index.html';
  
  switch (currentPage) {
    case 'index.html':
    case '':
      initializeHomePage();
      break;
    case 'portfolio.html':
      initializePortfolioPage();
      break;
    case 'contact.html':
      initializeContactPage();
      break;
  }
}

function handleKeyboardNav(e) {
  // Escape key closes mobile menu
  if (e.key === 'Escape' && state.isMenuOpen) {
    closeMobileMenu();
  }
  
  // Enter key on nav toggle
  if (e.key === 'Enter' && e.target === DOM.navToggle) {
    e.preventDefault();
    toggleMobileMenu();
  }
}

// ===== PAGE-SPECIFIC FUNCTIONS =====
function initializeHomePage() {
  // Add any home page specific functionality
  console.log('🏠 Home page initialized');
  
  // Initialize typing animation for hero text
  initializeTypingAnimation();
}

function initializePortfolioPage() {
  console.log('💼 Portfolio page initialized');
  
  // Portfolio-specific functionality is already in the HTML
  // This could be used for additional enhancements
}

function initializeContactPage() {
  console.log('📧 Contact page initialized');
  
  // Add contact form enhancements
  const inputs = document.querySelectorAll('input, textarea');
  inputs.forEach(input => {
    input.addEventListener('focus', (e) => {
      e.target.parentElement.classList.add('focused');
    });
    
    input.addEventListener('blur', (e) => {
      if (!e.target.value) {
        e.target.parentElement.classList.remove('focused');
      }
    });
  });
}

function initializeTypingAnimation() {
  const heroTitle = document.querySelector('.hero-title');
  if (!heroTitle) return;
  
  const spans = heroTitle.querySelectorAll('span');
  if (spans.length === 0) return;
  
  spans.forEach((span, index) => {
    span.style.opacity = '0';
    span.style.transform = 'translateY(20px)';
    
    setTimeout(() => {
      span.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
      span.style.opacity = '1';
      span.style.transform = 'translateY(0)';
    }, index * 300 + 500);
  });
}

// ===== UTILITY FUNCTIONS =====
function updateCurrentYear() {
  if (DOM.currentYear) {
    DOM.currentYear.textContent = new Date().getFullYear();
  }
}

function updateLastModified() {
  if (DOM.lastModified) {
    const lastModified = new Date(document.lastModified);
    const options = {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    };
    DOM.lastModified.textContent = `Last Modified: ${lastModified.toLocaleDateString('en-US', options)}`;
  }
}

function preloadImages() {
  const images = [
    'images/profile.webp',
    'https://icons.iconarchive.com/icons/wikipedia/flags/1024/BW-Botswana-Flag-icon.png'
  ];
  
  images.forEach(src => {
    const img = new Image();
    img.src = src;
    img.onerror = () => console.warn(`Failed to preload image: ${src}`);
  });
}

// ===== ERROR HANDLING =====
window.addEventListener('error', (e) => {
  console.error('JavaScript error:', e.error);
});

window.addEventListener('unhandledrejection', (e) => {
  console.error('Unhandled promise rejection:', e.reason);
});

// ===== PERFORMANCE MONITORING =====
function logPerformanceMetrics() {
  if ('performance' in window) {
    const navigation = performance.getEntriesByType('navigation')[0];
    const paint = performance.getEntriesByType('paint');
    
    console.log('⚡ Performance Metrics:');
    console.log(`DOM Content Loaded: ${navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart}ms`);
    console.log(`Page Load Complete: ${navigation.loadEventEnd - navigation.loadEventStart}ms`);
    
    paint.forEach(entry => {
      console.log(`${entry.name}: ${entry.startTime}ms`);
    });
  }
}

// ===== ACCESSIBILITY ENHANCEMENTS =====
function enhanceAccessibility() {
  // Add skip link
  const skipLink = document.createElement('a');
  skipLink.href = '#main';
  skipLink.textContent = 'Skip to main content';
  skipLink.className = 'skip-link';
  skipLink.style.cssText = `
    position: absolute;
    top: -40px;
    left: 6px;
    background: #000;
    color: #fff;
    padding: 8px;
    text-decoration: none;
    border-radius: 4px;
    z-index: 10001;
    transition: top 0.3s;
  `;
  
  skipLink.addEventListener('focus', () => {
    skipLink.style.top = '6px';
  });
  
  skipLink.addEventListener('blur', () => {
    skipLink.style.top = '-40px';
  });
  
  